# -*- coding: utf-8 -*-
"""Web_Scrapping_using_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aCdvlkt_cxLXGTWmd-0dyAn3WwkdO4MJ
"""

import pandas as pd
import requests
from bs4 import BeautifulSoup
import numpy as np

webpage=requests.get('https://www.ambitionbox.com/list-of-companies?page=1').text

soup=BeautifulSoup(webpage,'lxml')

soup.find_all('h1')[0].text

"""TO FIND OUT NAMES OF THE COMPANIES FROM AMBITIONBOX"""

for i in soup.find_all('h2'):
  print(i.text.strip())

for i in soup.find_all('p'):
  print(i.text.strip())

"""TO FIND OUT THE RATINGS"""

len(soup.find_all('p',class_='rating'))

"""TO FIND OUT THE NUMBER OF REVIEWS"""

len(soup.find_all('a' , class_='review-count'))

"""CONSIDERING THE WHOLE CONTAINER"""

company=soup.find_all('div',class_='company-content-wrapper')

len(company)

name=[]
rating=[]
reviews=[]
ctype=[]
hq=[]
how_old=[]
no_of_employee=[]

for i in company:

  name.append(i.find('h2').text.strip())
  rating.append(i.find('p',class_='rating').text.strip())
  reviews.append(i.find('a' , class_='review-count').text.strip())
  ctype.append(i.find_all('p',class_='infoEntity')[0].text.strip())
  hq.append(i.find_all('p',class_='infoEntity')[1].text.strip())
  how_old.append(i.find_all('p',class_='infoEntity')[2].text.strip())
  no_of_employee.append(i.find_all('p',class_='infoEntity')[3].text.strip())

df=pd.DataFrame({'name':name,
   'rating':rating,
   'reviews':reviews,
   'company_type':ctype,
   'Head_Quarters':hq,
   'Company_Age':how_old,
   'No_of_Employee':no_of_employee,
   })

name

rating

reviews

ctype

hq  #headquater of the companies

how_old

no_of_employee

df.shape

"""Creating dataframe for all the pages"""

final=pd.DataFrame()
for j in range(1,1001):
  webpage=requests.get('https://www.ambitionbox.com/list-of-companies?page={}'.format(j)).text
  soup=BeautifulSoup(webpage,'lxml')
  company=soup.find_all('div',class_='company-content-wrapper')
  name=[]
  rating=[]
  reviews=[]
  ctype=[]
  hq=[]
  how_old=[]
  no_of_employee=[]

  for i in company:

    try:
       name.append(i.find('h2').text.strip())
    except:
       name.append(np.nan)

    try:
       rating.append(i.find('p',class_='rating').text.strip())
    except:
       rating.append(np.nan)
   
    try:

      reviews.append(i.find('a' , class_='review-count').text.strip())
    except:
      reviews.append(np.nan)

    try:

      ctype.append(i.find_all('p',class_='infoEntity')[0].text.strip())
    except:
      ctype.append(np.nan)
    try:

      hq.append(i.find_all('p',class_='infoEntity')[1].text.strip())
    except:
      hq.append(np.nan)
    
    try:

      how_old.append(i.find_all('p',class_='infoEntity')[2].text.strip())
    except:
      how_old.append(np.nan)
    try:
      no_of_employee.append(i.find_all('p',class_='infoEntity')[3].text.strip())
    except:
      no_of_employee.append(np.nan)
    

  df=pd.DataFrame({'name':name,
    'rating':rating,
    'reviews':reviews,
    'company_type':ctype,
    'Head_Quarters':hq,
    'Company_Age':how_old,
    'No_of_Employee':no_of_employee,
    })
  
  final=final.append(df,ignore_index=True)

df

df.shape